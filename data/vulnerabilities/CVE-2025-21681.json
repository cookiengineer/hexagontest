{
	"name": "CVE-2025-21681",
	"description": "In the Linux kernel, the following vulnerability has been resolved:openvswitch: fix lockup on tx to unregistering netdev with carrierCommit in a fixes tag attempted to fix the issue in the followingsequence of calls:    do_output    -\u003e ovs_vport_send       -\u003e dev_queue_xmit          -\u003e __dev_queue_xmit             -\u003e netdev_core_pick_tx                -\u003e skb_tx_hashWhen device is unregistering, the 'dev-\u003ereal_num_tx_queues' goes tozero and the 'while (unlikely(hash \u003e= qcount))' loop inside the'skb_tx_hash' becomes infinite, locking up the core forever.But unfortunately, checking just the carrier status is not enough tofix the issue, because some devices may still be in unregisteringstate while reporting carrier status OK.One example of such device is a net/dummy.  It sets carrier ONon start, but it doesn't implement .ndo_stop to set the carrier off.And it makes sense, because dummy doesn't really have a carrier.Therefore, while this device is unregistering, it's still easy to hitthe infinite loop in the skb_tx_hash() from the OVS datapath.  Theremight be other drivers that do the same, but dummy by itself isimportant for the OVS ecosystem, because it is frequently used as apacket sink for tcpdump while debugging OVS deployments.  And when theissue is hit, the only way to recover is to reboot.Fix that by also checking if the device is running.  The runningstate is handled by the net core during unregistering, so it coversunregistering case better, and we don't really need to send packetsto devices that are not running anyway.While only checking the running state might be enough, the carriercheck is preserved.  The running and the carrier states seem disjoinedthroughout the code and different drivers.  And other core functionslike __dev_direct_xmit() check both before attempting to transmita packet.  So, it seems safer to check both flags in OVS as well.",
	"type": "none",
	"severity": "none",
	"state": "published",
	"references": [
		"https://git.kernel.org/stable/c/47e55e4b410f7d552e43011baa5be1aab4093990",
		"https://git.kernel.org/stable/c/82f433e8dd0629e16681edf6039d094b5518d8ed",
		"https://git.kernel.org/stable/c/ea966b6698785fb9cd0fdb867acd91b222e4723f",
		"https://git.kernel.org/stable/c/ea9e990356b7bee95440ba0e6e83cc4d701afaca"
	],
	"datetime": "2025-02-06 12:35:29",
	"connections": [],
	"devices": [],
	"distributions": [
		{
			"name": "debian",
			"version": "bullseye",
			"vendor": "debian-bullseye"
		},
		{
			"name": "debian",
			"version": "sid",
			"vendor": "debian-sid"
		},
		{
			"name": "debian",
			"version": "trixie",
			"vendor": "debian-trixie"
		},
		{
			"name": "debian",
			"version": "bookworm",
			"vendor": "debian-bookworm"
		}
	],
	"packages": [
		{
			"name": "linux",
			"version": "\u003c 5.10.223-1",
			"architecture": "any",
			"manager": "apt",
			"vendor": "debian-bullseye"
		},
		{
			"name": "linux",
			"version": "\u003c 6.12.11-1",
			"architecture": "any",
			"manager": "apt",
			"vendor": "debian-sid"
		},
		{
			"name": "linux",
			"version": "any",
			"architecture": "any",
			"manager": "apt",
			"vendor": "debian-trixie"
		}
	],
	"products": [],
	"programs": [],
	"weaknesses": []
}